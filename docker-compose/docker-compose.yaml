version: '3.8'

services:

  eureka-server:
    build: ../eureka-server/.
    ports:
      - "8761:8761"
    container_name: eureka-server
    networks:
      - mynet
  jenkins:
    image: jenkins/jenkins:lts
    build: ./jenkins/.
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      -  ./sonnar/settings.xml:/var/maven_settings/settings.xml
      - ./jenkins_home:/var/jenkins_home
    restart: always
    container_name: jenkins
    networks:
      - mynet
  sonarqube:
    image: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:mysql://db:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - db
    container_name: sonarqube
    networks:
      - mynet
  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=sonar
      - MYSQL_USER=sonar
      - MYSQL_PASSWORD=sonar_password
    volumes:
      - db_data:/var/lib/mysql
  administrator-service:
    build: ../administrator-service/.
    ports:
      - "8088:8088"
    depends_on:
      - eureka-server
      - alunoprofessordb
      - rabbitmq
    links:
      - alunoprofessordb
    env_file:
      - .env
    container_name: administrator-service
    networks:
      - mynet
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
      - mysql
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_DATABASE_URL=mysql://grafana:secret@mysql:3306/prometheus
      - GF_DATABASE_PASSWORD=secret
    networks:
      - mynet
    ports:
      - "3000:3000"
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    depends_on:
      - eureka-server
      - administrator-service
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - mynet
    container_name: prometheus
  prometheus-db:
    image: prom/prometheus:v2.25.0
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    depends_on:
      - mysql

  mysql:
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=prometheus
      - MYSQL_USER=grafana
      - MYSQL_PASSWORD=secret
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - mynet
  aluno-service:
    build: ../aluno-service/.
    container_name: aluno-service
    ports:
      - "8090:8090"
    depends_on:
      - eureka-server
      - alunoprofessordb
      - rabbitmq
    links:
      - alunoprofessordb
    env_file:
      - .env
    networks:
      - mynet
  professor-service:
    build: ../professor-service/.
    container_name: professor-service
    ports:
      - "8089:8089"
    depends_on:
      - eureka-server
      - alunoprofessordb
      - rabbitmq
    env_file:
      - .env
    links:
      - alunoprofessordb
    networks:
      - mynet
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      # AMQP protocol port
      - "5672:5672"
      # HTTP management UI
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - mynet
    container_name: rabbitmq


  alunoprofessordb:
    image: postgres
    container_name: alunoprofessordb
    hostname: postgres
    volumes:
      - ./createDB.sql:/docker-entrypoint-initdb.d/createDB.sql
    environment:
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    expose:
      - "5432:5432"
    networks:
      - mynet

networks:
  mynet:
    name: my-shared-db-network
volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  db_data:
  prometheus-data:
  mysql-data:
  grafana-data: